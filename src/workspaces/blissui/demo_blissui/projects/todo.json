{
  "name": "Todo",
  "compiler": "react",
  "version": "v0.2",
  "type": "app",
  "build": "designer",
  "nextId": 10,
  "rootId": "1",
  "externalCss": [],
  "externalJs": [
    "node_modules/react/dist/react.js",
    "node_modules/react-dom/dist/react-dom.js"
  ],
  "state": {},
  "packages": [
    {
      "name": "react",
      "version": "15.4.2"
    },
    {
      "name": "react-dom",
      "version": "15.4.2"
    }
  ],
  "js": [
    {
      "name": "init",
      "body": "function() { app.render(); }"
    }
  ],
  "cssVars": [],
  "css": [
    {
      "selector": "body",
      "properties": [
        {
          "name": "font-size",
          "value": "14pt"
        }
      ]
    },
    {
      "selector": "input",
      "properties": [
        {
          "name": "font-size",
          "value": "14pt"
        }
      ]
    }
  ],
  "load": [
    "init"
  ],
  "components": {
    "1": {
      "id": "1",
      "name": "Todo",
      "element": "div",
      "text": "",
      "attributes": [],
      "css": [],
      "js": [],
      "dynamicAttributes": [],
      "next": null,
      "previous": null,
      "child": "5",
      "parent": null
    },
    "5": {
      "id": "5",
      "name": "header",
      "element": "h1",
      "text": "Todos",
      "textFn": null,
      "ifFn": null,
      "repeatFn": null,
      "attributes": [],
      "css": [],
      "js": [],
      "dynamicAttributes": [],
      "next": "6",
      "previous": null,
      "child": null,
      "parent": "1"
    },
    "6": {
      "id": "6",
      "name": "add todo input",
      "element": "input",
      "text": null,
      "textFn": null,
      "ifFn": null,
      "repeatFn": null,
      "attributes": [
        {
          "name": "placeholder",
          "value": "Enter your new todo"
        }
      ],
      "css": [
        {
          "selector": "$id",
          "properties": [
            {
              "name": "outline",
              "value": "none"
            },
            {
              "name": "padding",
              "value": "10px"
            }
          ]
        }
      ],
      "js": [
        {
          "name": "getValue",
          "body": "function(scope, attributes) {\n  // /todos -> app.state.todos\n  return app.state.todos.currentTodo;\n}"
        },
        {
          "name": "handleChange",
          "body": "function(scope, attributes) {\n  return function(e) {\n    app.dispatch({\n      path: '/todos',\n      action: 'current_todo',\n      text: e.target.value\n    })\n  }\n};\n"
        },
        {
          "name": "handleKeyDown",
          "body": "function(scope, attributes) {\n  return function(e) {\n    var ENTER = 13;\n    if(e.keyCode === ENTER) {\n      // add a todo\n      app.dispatch({\n        path: '/todos',\n        action: 'add_todo',\n        text: app.state.todos.currentTodo\n      });\n      \n      // clear the currentTodo\n      app.dispatch({\n        path: '/todos',\n        action: 'current_todo',\n        text: ''\n      });\n    }\n  }\n};\n"
        }
      ],
      "dynamicAttributes": [
        {
          "name": "value",
          "value": "getValue"
        },
        {
          "name": "onChange",
          "value": "handleChange"
        },
        {
          "name": "onKeyDown",
          "value": "handleKeyDown"
        }
      ],
      "next": "8",
      "previous": "5",
      "child": null,
      "parent": "1"
    },
    "8": {
      "id": "8",
      "name": "list header",
      "element": "h3",
      "text": "Todo items",
      "textFn": null,
      "ifFn": null,
      "repeatFn": null,
      "attributes": [],
      "css": [],
      "js": [],
      "dynamicAttributes": [],
      "next": "9",
      "previous": "6",
      "child": null,
      "parent": "1"
    },
    "9": {
      "id": "9",
      "name": "todo item",
      "element": "div",
      "text": "",
      "textFn": "getText",
      "ifFn": null,
      "repeatFn": "repeater",
      "attributes": [],
      "css": [
        {
          "selector": "$id",
          "properties": [
            {
              "name": "cursor",
              "value": "pointer"
            },
            {
              "name": "padding",
              "value": "10px"
            },
            {
              "name": "margin-left",
              "value": "10px"
            },
            {
              "name": "margin-top",
              "value": "3px"
            },
            {
              "name": "background-color",
              "value": "#f6f3ff"
            },
            {
              "name": "margin-right",
              "value": "10px"
            }
          ]
        }
      ],
      "js": [
        {
          "name": "repeater",
          "body": "function(scope, attributes) {\n  return app.state.todos.todoList;\n};\n"
        },
        {
          "name": "getText",
          "body": "function(scope, attributes) {\n  return scope.repeater[scope.repeater_index].text;\n}"
        },
        {
          "name": "getStyle",
          "body": "function(scope, attributes) {\n  var complete = scope.repeater[scope.repeater_index].completed;\n  \n  var styles = {\n    textDecoration: 'none'\n  };\n  \n  if(complete) {\n    styles.textDecoration = 'line-through';\n  }\n  \n  return styles;\n}"
        },
        {
          "name": "handleClick",
          "body": "function(scope, attributes) {\n  var index = scope.repeater_index;\n  return function(e) {\n    app.dispatch({\n      path: '/todos',\n      action: 'toggle_completed',\n      index: index\n    })\n  }\n};\n"
        }
      ],
      "dynamicAttributes": [
        {
          "name": "style",
          "value": "getStyle"
        },
        {
          "name": "onClick",
          "value": "handleClick"
        }
      ],
      "next": null,
      "previous": "8",
      "child": null,
      "parent": "1"
    }
  },
  "schemas": [
    {
      "path": "/todos",
      "actions": [
        {
          "action": "init",
          "body": "function (data, args) {\n  var newData = {\n    currentTodo: '',\n    todoList: []\n  }\n  return newData;\n}"
        },
        {
          "action": "current_todo",
          "body": "function (data, args) {\n  var newData = Object.assign({}, data);\n  newData.currentTodo = args.text;\n  return newData;\n}"
        },
        {
          "action": "add_todo",
          "body": "function (data, args) {\n  var newData = Object.assign({}, data);\n  \n  var newTodo = {\n    text: args.text,\n    completed: false\n  };\n  \n  newData.todoList.push(newTodo);\n  \n  return newData;\n}"
        },
        {
          "action": "toggle_completed",
          "body": "function (data, args) {\n  var newData = Object.assign({}, data);\n  newData.todoList[args.index].completed = !newData.todoList[args.index].completed;\n  return newData;\n}"
        }
      ]
    }
  ]
}